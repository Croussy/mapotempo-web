<%= twitter_bootstrap_form_for(@destination, layout: :horizontal, html: {class: "form-horizontal", "data-destination_id" => (@destination.id or 0)}) do |f| %>
  <%= render 'shared/error_messages', model: @destination %>
  <%= f.text_field :ref do %>
    <p class="help-block"><%= t '.ref_help' %></p>
  <% end %>
  <%= f.text_field :name %>
  <%= f.text_field :street, {class: "form-control pointing", input_group: content_tag('i', '', {class: 'fa fa-crosshairs fa-fw', title: t('.locate_manually')})} %>
  <%= f.text_field :detail do %>
    <p class="help-block"><%= t '.detail_help' %></p>
  <% end %>
  <%= f.text_field :postalcode, {maxlength: 7} %>
  <%= f.text_field :city %>
  <%= f.text_field :country, {placeholder: t('.country_default', n: @destination.customer.default_country)} %>
  <div class="form-group">
    <label class="col-md-2 control-label" for="destination_city"><%= t 'activerecord.attributes.destination.geocoding_accuracy' %></label>
    <div class="col-md-6">
      <div id="geocoding_accuracy"<% if ! @destination.geocoding_accuracy %> style="display: none"<% end %>>
        <div class="progress">
          <div class="progress-bar<% if @destination.geocoding_accuracy %> progress-bar-<%= @destination.geocoding_accuracy > Mapotempo::Application.config.geocode_geocoder.accuracy_success ? 'success' : @destination.geocoding_accuracy > Mapotempo::Application.config.geocode_geocoder.accuracy_warning ? 'warning' : 'danger' %><% end %>" style="width: <%= @destination.geocoding_accuracy ? (@destination.geocoding_accuracy * 100).round : 0 %>%;">
            <span><%= @destination.geocoding_accuracy ? (@destination.geocoding_accuracy * 100).round.to_s + '%' : '' %></span>
          </div>
        </div>
        <p class="help-block"><%= t '.geocoding_accuracy_help' %></p>
      </div>
      <div id="geocoding_fail" style="display: none">
        <%= t '.geocoding_fail' %> - <a href="#" role="button" class="pointing"><i class="fa fa-crosshairs fa-fw"></i> <%= t '.locate_manually' %></a>
      </div>
      <div id="no_geocoding_accuracy"<% if @destination.geocoding_accuracy %> style="display: none"<% end %>>
        <%= t '.geocoding_accuracy_none' %>
      </div>
    </div>
  </div>
  <div class="form-group">
    <div class="col-md-offset-2 col-md-6"><div id="map" style="width: 100%; height: 200px;"></div></div>
  </div>
  <%= f.text_field :lat %>
  <%= f.text_field :lng %>
  <%= f.number_field :quantity, {min:1, placeholder: '1 (' + t('.quantity_default') + ')' } do %>
    <p class="help-block"><%= t '.quantity_help' %></p>
  <% end %>
  <%= f.text_field :take_over, {
    value: @destination.take_over ? @destination.take_over.strftime("%H:%M:%S") : nil,
    placeholder: @destination.customer.take_over ? @destination.customer.take_over.strftime("%H:%M:%S") + ' (' + t('.take_over_default') + ')' : nil,
    input_group: t('all.unit.hour_minute_second')} do %>
    <p class="help-block"><%= t '.take_over_help' %></p>
  <% end %>
  <%= f.text_field :open, {value: @destination.open ? @destination.open.strftime("%H:%M") : nil, input_group: t('all.unit.hour_minute')} %>
  <%= f.text_field :close, {value: @destination.close ? @destination.close.strftime("%H:%M") : nil, input_group: t('all.unit.hour_minute')} %>
  <%= f.select :tag_ids, t('activerecord.attributes.destination.tag_ids'), options_for_select(@destination.customer.tags.map{ |tag| [tag.label, tag.id, {'data-color' => tag.color && tag.color[1..-1], 'data-icon' => tag.icon}]}, @destination.tags.collect(&:id)), {}, {multiple: true, input_group: content_tag('i', '', class: 'fa fa-tags fa-fw')} do %>
    <p class="help-block"><%= t '.tags_help' %></p>
  <% end %>
  <%= f.text_area :comment do %>
    <p class="help-block"><%= t '.comment_help' %></p>
  <% end %>
  <%= f.actions do %>
    <%= f.submit %>
  <% end %>
<% end %>
<%
controller.js(
  destination_id: @destination.id || 0,
  map_layer_url: request.ssl? ? current_user.layer.urlssl : current_user.layer.url,
  map_lat: @destination.customer.default_position[:lat],
  map_lng: @destination.customer.default_position[:lng],
  map_attribution: current_user.layer.map_attribution
)
%>
